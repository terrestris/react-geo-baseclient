.viewport {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  height: 100%;
}

header {
  height: var(--header-height);
  background-color: white;
}

.main-content {
  min-height: 0;
  flex: 1;
  display: flex;
}

.main-content .map {
  flex: 1;
}

.ant-layout-sider-trigger {
  position: relative;
}

.vertical-toolbar {
  position: absolute;
  right: 10px;
  top: 60px;
}

.layerset-basemap-chooser {
  z-index: 20;
  position: absolute;
  left: 0;
  bottom: 78px;
}

/**
 * Apply the baseColor to various elements
 */
 button, .ant-collapse-header, .react-geo-titlebar {
  background-color: var(--baseColor);
}

/**
 * Make most of the text elements use the defined text color.
 * This list may be incomplete
 */
 p, b, h1, h2, h3, h4, h5, em,
 div:not(.ant-tooltip-inner, .react-geo-measure-tooltip),
 span:not(.fa, .anticon.ant-alert-icon, .anticon.anticon-info-circle,
 .ant-notification-notice-icon, .ant-table-column-sorter-down, .ant-table-column-sorter-up),
 a:not(.link),
 li {
   color: var(--textColor);
 }

/**
 * Brighten placeholder text
 */
span.ant-select-selection-placeholder {
  filter: opacity(0.5);
}

/**
 * Always underline the imprint text to indicate href
 */
div.imprint.footer-element {
  text-decoration: underline;
}

/**
 * Apply CSS filter brightness for hovered and pressed buttons
 */
button:hover, .react-geo-togglebutton.btn-pressed {
    filter: brightness(0.8);
    background-color: var(--baseColor) !important;
}

@media only screen and (max-width: 768px) {
  .react-geo-panel {
      width: 100%;
      transform: translate(0, 100px);
      min-width: unset;
  }
}

.ant-tooltip .ant-tooltip-inner,
.ant-tooltip .ant-tooltip-arrow-content {
  background-color: rgba(0,0,0,.5);
}
